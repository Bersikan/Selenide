plugins {
    id 'java'
    id 'groovy'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.testng:testng:7.10.1'
    testImplementation 'com.codeborne:selenide:7.2.1'
    testImplementation project(":commons")
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.22'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.26.0'
    testImplementation 'io.qameta.allure:allure-selenide:2.26.0'
    testImplementation 'io.qameta.allure:allure-java-commons:2.26.0'
    testImplementation 'io.qameta.allure:allure-testng:2.27.0'
    implementation 'io.rest-assured:json-schema-validator:5.4.0'
    testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
    implementation 'org.gebish:geb-spock:7.0'
    implementation 'org.gebish:geb-core:7.0'


}

def suite = project.properties.getOrDefault("suite", "testng.xml")
int threads = project.properties.getOrDefault("threads", 1)

String suitePath = "src/test/resources/"
String[] suiteList = "${suite}".split(",").collect{suitePath+it+".xml"}.toArray()

test {
    useTestNG() {
    }
}

tasks.register('testExec', Test) {
    useTestNG() {
        suites suiteList
        setParallel("methods")
        if (project.hasProperty("threads")) {
            setThreadCount(threads)
        }
    }

    testLogging.showStandardStreams = true
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}